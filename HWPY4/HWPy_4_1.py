# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. 
# m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

import random  # импортирую модуль random

# создание двух наборов
n = [] # пустй список n
m = [] # пустой список m
number_of_elements_N = int(random.randint(5,11)) # случайное количество элементов в списке n от 5 до 10
number_of_elements_M = int(random.randint(5,11)) # случайное количество элементов в списке m от 5 до 10
for i in range(number_of_elements_N): # цикл заполнения списка n
    n.append(int(random.randint(1,51))) # заполняем список n случайными числами от 1 до 50
for i in range(number_of_elements_M): # цикл заполнения списка m
    m.append(int(random.randint(1,51))) # заполняем список m случайными числами от 1 до 50

# # ручное тестирование сравнения и сортировки наборов
# number_of_elements_N = int(12)
# n = [2,9,4,6,8,10,12,10,8,6,4,2]
# number_of_elements_M = int(7)
# m = [3,6,9,12,10,15,18]

# проверка полученных наборов
print(f'Количестов элементов в наборе n: {number_of_elements_N}') # количество элементов в списке n
print(f'Нобор n : {n}') # выводим список n
print(f'Количестов элементов в наборе m: {number_of_elements_M}') # количество элементов в списке m
print(f'Набор m : {m}') # выводим множество m

# сравнение значений в наборах
n_m = [] # пустой список для одинаковых значений
for i in range(len(n)): # цикл сравнения элементов наборов
    for j in range(len(m)):
        if n[i] == m[j]:
            n_m.append(n[i]) # заполнение списка совпадающими значениями
print(f'Значения встречающиеся в обоих наборах : {n_m}')
n_m = sorted(list(set(n_m))) # делаем и списка  - список с уникальными значениями и сортируем его по возрастанию
print(f'Уникальные значения встречающиеся в наборах по возрастанию : {n_m}') # выводим список значений            


